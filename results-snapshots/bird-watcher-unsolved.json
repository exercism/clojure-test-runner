{
  "status": "fail",
  "tests": [
    {
      "message": "Expected (= [0 2 5 3 7 8 4] bird-watcher/last-week) but got (not (= [0 2 5 3 7 8 4] #object[sci.impl.vars.SciUnbound 0x263dd8df \"Unbound: #'bird-watcher/last-week\"]))",
      "name": "last-week-test",
      "status": "fail",
      "test_code": "(is (= [0 2 5 3 7 8 4] bird-watcher/last-week))"
    },
    {
      "message": "Expected (= 0 (bird-watcher/today [0 0 2 0 0 1 0])) but got (not (= 0 nil))",
      "name": "today-disappointing-week-test",
      "status": "fail",
      "test_code": "(testing \"Today's bird count of disappointing week\" (is (= 0 (bird-watcher/today [0 0 2 0 0 1 0]))))"
    },
    {
      "message": "Expected (= 10 (bird-watcher/today [8 8 9 5 4 7 10])) but got (not (= 10 nil))",
      "name": "today-busy-week-test",
      "status": "fail",
      "test_code": "(testing \"Today's bird count of busy week\" (is (= 10 (bird-watcher/today [8 8 9 5 4 7 10]))))"
    },
    {
      "message": "Expected (= [6 5 5 11 2 5 1] (bird-watcher/inc-bird [6 5 5 11 2 5 0])) but got (not (= [6 5 5 11 2 5 1] nil))",
      "name": "increment-bird-no-visits-test",
      "status": "fail",
      "test_code": "(testing \"Increment today's count with no previous visits\" (is (= [6 5 5 11 2 5 1] (bird-watcher/inc-bird [6 5 5 11 2 5 0]))))"
    },
    {
      "message": "Expected (= [5 2 4 2 4 5 8] (bird-watcher/inc-bird [5 2 4 2 4 5 7])) but got (not (= [5 2 4 2 4 5 8] nil))",
      "name": "increment-bird-multiple-visits-test",
      "status": "fail",
      "test_code": "(testing \"Increment today's count with multiple previous visits\" (is (= [5 2 4 2 4 5 8] (bird-watcher/inc-bird [5 2 4 2 4 5 7]))))"
    },
    {
      "message": "Expected (= true (bird-watcher/day-without-birds? [5 5 4 0 7 6 7])) but got (not (= true nil))",
      "name": "day-without-birds-test",
      "status": "fail",
      "test_code": "(testing \"Has day without birds with day without birds\" (is (= true (bird-watcher/day-without-birds? [5 5 4 0 7 6 7]))))"
    },
    {
      "message": "Expected (= false (bird-watcher/day-without-birds? [5 5 4 1 7 6 7])) but got (not (= false nil))",
      "name": "no-day-without-birds-test",
      "status": "fail",
      "test_code": "(testing \"Has day without birds with no day without birds\" (is (= false (bird-watcher/day-without-birds? [5 5 4 1 7 6 7]))))"
    },
    {
      "message": "Expected (= 1 (bird-watcher/n-days-count [0 0 1 0 0 1 0] 3)) but got (not (= 1 nil))",
      "name": "n-days-count-disappointing-week-test",
      "status": "fail",
      "test_code": "(testing \"Count for first three days of disappointing week\" (is (= 1 (bird-watcher/n-days-count [0 0 1 0 0 1 0] 3))))"
    },
    {
      "message": "Expected (= 48 (bird-watcher/n-days-count [5 9 12 6 8 8 17] 6)) but got (not (= 48 nil))",
      "name": "n-days-count-busy-week-test",
      "status": "fail",
      "test_code": "(testing \"Count for first 6 days of busy week\" (is (= 48 (bird-watcher/n-days-count [5 9 12 6 8 8 17] 6))))"
    },
    {
      "message": "Expected (= 0 (bird-watcher/busy-days [1 1 1 0 0 0 0])) but got (not (= 0 nil))",
      "name": "busy-days-disappointing-week-test",
      "status": "fail",
      "test_code": "(testing \"Busy days for disappointing week\" (is (= 0 (bird-watcher/busy-days [1 1 1 0 0 0 0]))))"
    },
    {
      "message": "Expected (= 5 (bird-watcher/busy-days [4 9 5 7 8 8 2])) but got (not (= 5 nil))",
      "name": "busy-days-busy-week-test",
      "status": "fail",
      "test_code": "(testing \"Busy days for busy week\" (is (= 5 (bird-watcher/busy-days [4 9 5 7 8 8 2]))))"
    },
    {
      "message": "Expected (= true (bird-watcher/odd-week? [1 0 1 0 1 0 1])) but got (not (= true nil))",
      "name": "odd-week-matching-test",
      "status": "fail",
      "test_code": "(testing \"Odd week for week matching odd pattern\" (is (= true (bird-watcher/odd-week? [1 0 1 0 1 0 1]))))"
    },
    {
      "message": "Expected (= false (bird-watcher/odd-week? [2 2 1 0 1 1 1])) but got (not (= false nil))",
      "name": "odd-week-not-matching-test",
      "status": "fail",
      "test_code": "(testing \"Odd week for week that does not match pattern\" (is (= false (bird-watcher/odd-week? [2 2 1 0 1 1 1]))))"
    }
  ],
  "version": 2
}
