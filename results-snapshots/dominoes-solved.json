{
  "status": "pass",
  "tests": [
    {
      "name": "empty-input-empty-output",
      "status": "pass",
      "test_code": "(is (can-chain? []))"
    },
    {
      "name": "singleton-input-singleton-output",
      "status": "pass",
      "test_code": "(is (can-chain? [[1 1]]))"
    },
    {
      "name": "singleton-that-cant-be-chained",
      "status": "pass",
      "test_code": "(is ((comp not can-chain?) [[1 2]]))"
    },
    {
      "name": "three-elements",
      "status": "pass",
      "test_code": "(is (can-chain? [[1 2] [3 1] [2 3]]))"
    },
    {
      "name": "can-reverse-dominoes",
      "status": "pass",
      "test_code": "(is (can-chain? [[1 2] [1 3] [2 3]]))"
    },
    {
      "name": "cant-be-chained",
      "status": "pass",
      "test_code": "(is ((comp not can-chain?) [[1 2] [4 1] [2 3]]))"
    },
    {
      "name": "disconnected-simple",
      "status": "pass",
      "test_code": "(is ((comp not can-chain?) [[1 1] [2 2]]))"
    },
    {
      "name": "disconnected-double-loop",
      "status": "pass",
      "test_code": "(is ((comp not can-chain?) [[1 2] [2 1] [3 4] [4 3]]))"
    },
    {
      "name": "disconnected-single-isolated",
      "status": "pass",
      "test_code": "(is ((comp not can-chain?) [[1 2] [2 3] [3 1] [4 4]]))"
    },
    {
      "name": "need-backtrack",
      "status": "pass",
      "test_code": "(is (can-chain? [[1 2] [2 3] [3 1] [2 4] [2 4]]))"
    },
    {
      "name": "separate-loops",
      "status": "pass",
      "test_code": "(is (can-chain? [[1 2] [2 3] [3 1] [1 1] [2 2] [3 3]]))"
    },
    {
      "name": "nine-elements",
      "status": "pass",
      "test_code": "(is (can-chain? [[1 2] [5 3] [3 1] [1 2] [2 4] [1 6] [2 3] [3 4] [5 6]]))"
    }
  ],
  "version": 3
}
